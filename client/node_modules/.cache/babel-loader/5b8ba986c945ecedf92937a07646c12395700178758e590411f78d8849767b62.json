{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\DI\\\\websites\\\\instasocial\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  var _user$result3;\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      var _user$result;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n    clear();\n  };\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create your own posts and like other's posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? 'Editing' : 'Creating', \" a Post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(Form, \"wcx3a5Iwgvdd9cFTFwaoNtehAdU=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["C:/Users/hp/Documents/DI/websites/instasocial/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useStyles from './styles'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPost, updatePost } from '../../actions/posts'\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n   const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' })\r\n   const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null)\r\n   const classes = useStyles()\r\n   const dispatch = useDispatch()\r\n   const user = JSON.parse(localStorage.getItem('profile'))\r\n\r\n   useEffect(() => {\r\n      if (post) setPostData(post)\r\n   }, [post])\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (currentId) {\r\n         dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }))\r\n      } else {\r\n         dispatch(createPost({ ...postData, name: user?.result?.name }))\r\n      }\r\n      clear()\r\n   }\r\n\r\n   const clear = () => {\r\n      setCurrentId(null)\r\n      setPostData({ title: '', message: '', tags: '', selectedFile: '' })\r\n   }\r\n\r\n   if (!user?.result?.name) {\r\n      return (\r\n         <Paper className={classes.paper}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n               Please Sign In to create your own posts and like other's posts.\r\n            </Typography>\r\n         </Paper>\r\n      );\r\n   }\r\n\r\n   return (\r\n      <Paper className={classes.paper}>\r\n         <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\" > {currentId ? 'Editing' : 'Creating'} a Post</Typography>\r\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n            <div className={classes.fileInput}>\r\n               <FileBase\r\n                  type=\"file\"\r\n                  multiple={false}\r\n                  onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n               />\r\n            </div>\r\n            <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n         </form>\r\n      </Paper>\r\n   );\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}